version: "3.8"

services:
  db:
    image: postgres:17-alpine
    container_name: hotelhub_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    networks:
      - app_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:8.0-rc1-bookworm"
    container_name: hotelhub_redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: ["daphne", "-b", "0.0.0.0", "-p", "8000", "hotelhub.asgi:application"]
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_net
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@db:5432/postgres}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:redis_password@redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://:redis_password@redis:6379/0}
      - CELERY_TIMEZONE=${CELERY_TIMEZONE:-Asia/Baku}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - static_volume:/app/static
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build: .
    command: ["celery", "-A", "hotelhub", "worker", "-l", "debug"]
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app_net
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:redis_password@redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://:redis_password@redis:6379/0}
      - CELERY_TIMEZONE=${CELERY_TIMEZONE:-Asia/Baku}
    volumes:
      - .:/app

  celery-beat:
    build: .
    command: celery -A hotelhub beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:redis_password@redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://:redis_password@redis:6379/0}
      - CELERY_TIMEZONE=${CELERY_TIMEZONE:-Asia/Baku}
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    networks:
      - app_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9201:9200"
      - "9300:9300"
    networks:
      - app_net
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5602:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - app_net

networks:
  app_net:

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  static_volume: